{"version":3,"sources":["Components/Backdrop/index.tsx","Components/Navbar/index.tsx","Components/SideDrawer/index.tsx","Pages/Home/index.tsx","Pages/About/index.tsx","Pages/Works/index.tsx","Pages/Skills/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Backdrop","clickHandler","_this","props","backdropClickHandler","react","BackdropWrapper","onClick","this","React","styled","div","_templateObject","Object","taggedTemplateLiteral","Navbar","drawToggleClickHandler","NavigationBar","Navigation","MenuIconWrapper","esm","Provider","value","color","size","index_esm","TitleWrapper","to","GrowWrapper","NavigationItemsWrapper","react_router_dom","header","Navbar_templateObject","nav","_templateObject2","_templateObject3","Link","_templateObject4","_templateObject5","_templateObject6","SideDrawer","SideDrawerWrapper","show","TitleAreaWrapper","SideDrawer_TitleWrapper","href","title","go_index_esm","SideDrawer_templateObject","css","SideDrawer_templateObject2","SideDrawer_templateObject3","p","SideDrawer_templateObject4","Home","PageTitle","JobTitle","h1","Home_templateObject","h2","Home_templateObject2","About","className","Card","colSpan","target","rel","fa_index_esm","About_templateObject","Works","CategoryTitle","CardContainer","fluid","Row","website","map","item","i","Col","key","xs","lg","WebsiteCard","CardBody","CardTitle","CardText","lib_default","a","image","src","concat","process","filename","alt","zoomImage","charge","url","SourceLink","system","SystemCard","text","period","tools","Works_templateObject","Container","Works_templateObject2","Works_templateObject3","Works_templateObject4","Works_templateObject5","Skills","SkillsContainer","Skills_ListItems","ListItems","contents","row_id","SkillsToast","ToastHeader","icon","category","ToastBody","icn","item_id","IconImage","skill","Skills_templateObject","Toast","Skills_templateObject2","img","Skills_templateObject3","App","classCallCheck","_super","call","setState","prevState","isOpen","state","backDrop","sideDrawerOption","Components_Backdrop","GlobalStyle","Components_Navbar","Components_SideDrawer","MainWrapper","react_router","path","component","createGlobalStyle","App_templateObject","main","App_templateObject2","Boolean","window","location","hostname","match","ReactDOM","render","react_default","createElement","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.acb841a4.chunk.js","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\n\ninterface IProps {\n  backdropClickHandler(): void,\n}\n\nclass Backdrop extends React.Component<IProps, {}> {\n\n  public render() {\n    return <BackdropWrapper onClick={this.clickHandler} />;\n  }\n\n  private clickHandler = () => {\n    this.props.backdropClickHandler();\n  };\n}\n\nexport default Backdrop;\n\nconst BackdropWrapper = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.3);\n  z-index: 100;\n`;","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IconContext } from 'react-icons';\nimport { MdMenu } from 'react-icons/md';\n\nimport styled from 'styled-components';\n\ninterface IProps {\n  drawToggleClickHandler(): void,\n}\n\nclass Navbar extends React.Component<IProps, {}> {\n\n  public render() {\n    return (\n      <NavigationBar>\n        <Navigation>\n          <MenuIconWrapper onClick={this.clickHandler}>\n            <IconContext.Provider value={{ color: \"#fff\", size: \"2.5em\" }}>\n              <MdMenu />\n            </IconContext.Provider>\n          </MenuIconWrapper>\n          <TitleWrapper to=\"/\">Yu Nishimura Portfolio</TitleWrapper>\n          <GrowWrapper />\n          <NavigationItemsWrapper>\n            <ul>\n              <Link to=\"/about\">\n                <li>About</li>\n              </Link>\n              <Link to=\"/works\">\n                <li>Works</li>\n              </Link>\n              <Link to=\"/skills\">\n                <li>Skills</li>\n              </Link>\n            </ul>\n          </NavigationItemsWrapper>\n        </Navigation>\n      </NavigationBar>\n    );\n  }\n\n  private clickHandler = () => {\n    this.props.drawToggleClickHandler();\n  };\n}\n\nexport default Navbar;\n\nconst SiteMainColor = \"#6d7a93\";\n\nconst NavigationBar = styled.header`\n  position: fixed;\n  top: 0px;\n  left: 0px;\n  width: 100%;\n  height: 56px;\n  background-color: #fff;\n  border-top: 2px solid ${SiteMainColor};\n  z-index: 100;\n`;\n\nconst Navigation = styled.nav`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  padding-left: 1rem;\n`;\n\nconst MenuIconWrapper = styled.div`\n  background-color: ${SiteMainColor};\n  padding: 4px 4px;\n\n  @media (min-width: 769px) {\n    display: none;\n  }\n`;\n\nconst TitleWrapper = styled(Link)`\n  color: ${SiteMainColor};\n  font-size: 2.3rem;\n  padding: 0 1rem 4px;\n  text-decoration: none;\n\n  &:hover,\n  &:visited {\n    text-decoration: none;\n    color: ${SiteMainColor};\n  }\n  \n  @media (min-width: 769px) {\n    padding: 0 0rem 4px;\n  }\n  @media (max-width: 768px) {\n    width: 29rem;\n    text-align: center;\n  }\n`;\n\nconst GrowWrapper = styled.div`\n  flex: 1;\n`;\n\nconst NavigationItemsWrapper = styled.div`\n  height: 100%;\n  \n  ul {\n    list-style: none;\n    line-height: 1.3em;\n    margin: 0;\n    padding: 0 2em 0 0;\n    display: flex;\n    height: 100%;\n\n    a {\n      color: ${SiteMainColor};\n      text-decoration: none;\n      font-size: 2.2rem;\n\n      &:hover {\n        text-decoration: none;\n      }\n\n      li {\n        padding: 18px 2rem;\n      }\n    }\n  }\n  \n  @media (max-width: 768px) {\n    display: none;\n  }\n`;","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IconContext } from 'react-icons';\nimport { GoHome } from 'react-icons/go';\nimport styled, { css } from 'styled-components';\n\ninterface ISideDrawerWrapperProps {\n  show: boolean,\n}\n\ninterface IProps extends ISideDrawerWrapperProps {\n  drawToggleClickHandler(): void,\n}\n\nclass SideDrawer extends React.Component<IProps, {}> {\n\n  public render() {\n    return (\n      <SideDrawerWrapper show={this.props.show}>\n        <TitleAreaWrapper>\n          <TitleWrapper>\n            <a href=\"/\" title=\"Home\">\n              <IconContext.Provider value={{ color: \"white\", size: \"25px\" }}><GoHome /></IconContext.Provider>\n            </a>\n          </TitleWrapper>\n        </TitleAreaWrapper>\n        <ul>\n          <Link to=\"/about\">\n            <li onClick={this.clickHandler}>About</li>\n          </Link>\n          <Link to=\"/works\">\n            <li onClick={this.clickHandler}>Works</li>\n          </Link>\n          <Link to=\"/skills\">\n            <li onClick={this.clickHandler}>Skills</li>\n          </Link>\n        </ul>\n      </SideDrawerWrapper>\n    );\n  }\n\n  private clickHandler = () => {\n    this.props.drawToggleClickHandler();\n  };\n}\n\nexport default SideDrawer;\n\nconst SideDrawerWrapper = styled.nav`\n  height: 100%;\n  background: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 70%;\n  max-width: 300px;\n  z-index: 200;\n  transform: translateX(-100%);\n  transition: transform 0.3s ease-out;\n  ${(props: ISideDrawerWrapperProps) =>\n    props.show &&\n    css`\n      box-shadow: 1px 0px 3px rgba(0, 0, 0, 0.5);\n      transform: translateX(0);\n    `}\n  \n  @media (min-width: 769px) {\n    display: none;\n  }\n\n  ul {\n    height: 100%;\n    padding: 0 0;\n    margin: 0 0;\n    list-style: none;\n    justify-content: center;\n\n    a {\n      text-decoration: none;\n      font-size: 2rem;\n\n      &:hover,\n      &:active {\n        text-decoration: none;\n      }\n\n      li {\n        padding: 1rem 0;\n        padding-left: 3rem;\n        border-bottom: thin solid black;\n        color: #6d7a93;\n\n        &:hover,\n        &:active {\n          background-color: #889bc3;\n          color: #fff;\n        }\n      }\n    }\n  }\n`;\n\nconst TitleAreaWrapper = styled.div`\n    height: 56px;\n    background: #889bc3;\n`;\n\nconst TitleWrapper = styled.p`\n    color: white;\n    font-size: 2.5rem;\n    text-decoration: none;\n    padding: 0.5rem 3rem;\n    margin: 0;\n`;","import * as React from 'react';\n\nimport styled from 'styled-components';\n\nclass Home extends React.Component {\n\n  public render() {\n    return (\n      <div>\n        <PageTitle>Yu Nishimura Portfolio Site</PageTitle>\n        <JobTitle>Web Developer</JobTitle>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n\nconst PageTitle = styled.h1`\n  color: #fff;\n  \n  @media (max-width: 768px) {\n    font-size: 4.5rem;\n    margin: 25vh auto 0;\n    width: 85%;\n  }\n\n  @media (min-width: 769px) {\n    font-size: 6rem;\n    margin-top: 40vh;\n  }\n`;\n\nconst JobTitle = styled.h2`\n  color: #fff;\n  font-weight: normal;\n\n  @media (max-width: 768px) {\n    font-size: 2.5rem;\n  }\n\n  @media (min-width: 769px) {\n    font-size: 4rem;\n  }\n`;","import * as React from 'react';\nimport { IconContext } from 'react-icons';\nimport { GoMarkGithub } from 'react-icons/go';\nimport { FaInstagram, FaFacebookSquare } from 'react-icons/fa';\n\nimport styled from 'styled-components';\n\nclass About extends React.Component {\n\n  public render() {\n    return (\n      <div>\n        <h1 className=\"pagetitle\">About</h1>\n        <Card>\n          <table>\n            <tbody>\n              <tr>\n                <th>Name</th>\n                <td>Yu Nishimura</td>\n              </tr>\n              <tr>\n                <th>Born</th>\n                <td>1976</td>\n              </tr>\n              <tr>\n                <th>Interests</th>\n                <td>Books, Movies, Trade U.S. Stocks</td>\n              </tr>\n              <tr className=\"icons\">\n                <td colSpan={2}>\n                  <IconContext.Provider value={{ size: \"60px\" }}>\n                    <a href=\"https://github.com/ulysses0604\" title=\"Github\" target=\"_blank\" rel=\"noopener noreferrer\">\n                      <GoMarkGithub /></a>\n                    <a href=\"https://www.facebook.com/yuh.nishi\" title=\"Facebook\" target=\"_blank\" rel=\"noopener noreferrer\">\n                      <FaFacebookSquare /></a>\n                    <a href=\"https://www.instagram.com/n1sh1mvr4/\" title=\"Instagram\" target=\"_blank\" rel=\"noopener noreferrer\">\n                      <FaInstagram /></a>\n                  </IconContext.Provider>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default About;\n\nconst Card = styled.div`\n  margin: 5vh auto;\n  background: white;\n  border-radius: 10px;\n  border: 2px solid #889bc3;\n\n  @media(max-width: 768px) {\n    width: 90%;\n    padding: 15px 0;\n  }\n\n  @media(min-width: 769px) {\n    width: 60rem;\n  }\n\n  table {\n    text-align: left;\n    padding: 50px 20px;\n    margin: 0 auto;\n\n    tr {\n      margin-bottom: 20px;\n\n      th {\n        text-align: right;\n        font-size: 2rem;\n        padding: 15px 10px 0px;\n        color: #889bc3;\n      }\n\n      td {\n        font-size: 2rem;\n        padding-left: 10px;\n        padding: 15px 10px 0px;\n        color: #5a657a;\n      }\n\n      &.icons {\n        text-align: center;\n\n        td {\n          svg {\n            color: #5a657a;\n            margin: 10px 30px 20px;\n\n            @media (max-width: 768px) {\n              margin: 10px 10px 20px;\n            }\n          }\n        }\n      } \n    }\n  }\n`;","import * as React from \"react\";\nimport {Card, CardBody, CardText, CardTitle, Col, Container, Row} from \"reactstrap\";\n\nimport styled from \"styled-components\";\nimport system from \"./SystemDevelopments.json\";\nimport website from \"./WebsiteDevelopments.json\";\nimport ImageZoom from 'react-medium-image-zoom'\n\nclass Works extends React.Component {\n\n  public render() {\n    return (\n      <div>\n        <h1 className=\"pagetitle\">Works</h1>\n        <CategoryTitle>Website Developments</CategoryTitle>\n        <CardContainer fluid={true}>\n          <Row>\n            {website.map((item, i) => (\n              <Col key={i} xs=\"12\" lg=\"3\">\n                <WebsiteCard>\n                  <CardBody>\n                    <CardTitle>{item.title}</CardTitle>\n                    <CardText>\n                      <ImageZoom\n                        image={{\n                          src: `${process.env.PUBLIC_URL}/img/${item.filename}`,\n                          alt: `${item.title}`,\n                          className: 'site-image'\n                        }}\n                        zoomImage={{\n                          src: `${process.env.PUBLIC_URL}/img/${item.filename}`,\n                          alt: `${item.title}`\n                        }}\n                       />\n                    </CardText>\n                    <h3>担当業務</h3>\n                    {item.charge ? <p>{item.charge}</p> : \"\"}\n                    {item.url ? <SourceLink><a href={item.url} target='_blank' rel=\"noopener noreferrer\">SEE IT ONLINE</a></SourceLink> : \"\"}\n                  </CardBody>\n                </WebsiteCard>\n              </Col>\n            ))}\n          </Row>\n        </CardContainer>\n\n        <CategoryTitle>Web System Developments</CategoryTitle>\n        <CardContainer fluid={true}>\n          <Row>\n            {system.map((item, i) => (\n            <Col key={i} xs=\"12\" lg=\"4\">\n              <SystemCard>\n                <CardBody>\n                  <CardTitle>{item.title}</CardTitle>\n                  <CardText>{item.text}</CardText>\n                  <h3>開発時期</h3>\n                  {item.period ? <p className=\"period\">{item.period}</p> : \"\"}\n                  <h3>担当業務</h3>\n                  {item.charge ? <p className=\"charge\">{item.charge}</p> : \"\"}\n                  <h3>開発ツール</h3>\n                  {item.tools ? <p className=\"tools\">{item.tools}</p> : \"\"}\n                  {item.url ? <SourceLink><a href={item.url} target='_blank' rel=\"noopener noreferrer\">SEE IT ONLINE</a></SourceLink> : \"\"}\n                </CardBody>\n              </SystemCard>\n            </Col>\n            ))}\n          </Row>\n        </CardContainer>\n      </div>\n    );\n }\n}\n\nexport default Works;\n\nconst CategoryTitle = styled.h2`\n  font-size: 3rem;\n  margin-top: 3vh;\n  color: #fff;\n\n  @media (max-width: 768px) {\n    font-size: 2.5rem;\n    margin: 1vh 6rem;\n  }\n`;\n\nconst CardContainer = styled(Container)`\n  max-width: 1300px;\n  margin: 5vh auto;\n\n  @media (max-width: 768px) {\n    margin-top: 3vh;\n  }\n`;\n\nconst SystemCard = styled(Card)`\n  max-width: 400px;\n  max-height: 440px;\n  margin-bottom: 30px;\n  font-size: 1rem;\n  box-shadow: 0 0.25rem 0.75rem rgba(0, 0, 0, 0.1);\n\n  @media (max-width: 768px) {\n    max-height: 52rem;\n  }\n\n  .card-body {\n    text-align: left;\n    height: 440px;\n    padding: 20px;\n\n    @media (max-width: 768px) {\n      height: 52rem;\n    }\n    \n    .card-title {\n      font-weight: bold;\n      font-size: 1.6rem;\n      text-align: center;\n      margin: 5px auto 15px;\n    }\n\n    h3 {\n      font-size: 1.2rem;\n      color: #ff8c2c;\n      border-bottom: 2px solid #ff8c2c;\n      display: inline-block;\n    }\n\n    p {\n      font-size: 1.3rem;\n\n      &.card-text {\n        text-align: justify;\n        margin-bottom: 15px;\n        line-height: 2rem;\n      }\n      &.period {\n        font-size: 1.2rem;\n      }\n    }\n  }\n`;\n\nconst WebsiteCard = styled(SystemCard)`\n  max-width: 300px;\n  max-height: 500px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media (max-width: 768px) {\n    max-height: 48rem;\n  }\n\n  .card-body {\n    height: 500px;\n\n    @media (max-width: 768px) {\n      height: 48rem;\n    }\n\n    img {\n      &.site-image {\n        border: 1px solid #ddd;\n        display: block;\n        width: 202px;\n        margin: 0 auto;\n      }\n    }\n  }\n`;\n\nconst SourceLink = styled.div`\n  position: absolute;\n  bottom: 0;\n  margin: 20px 0;\n  font-size: 1.3rem;\n\n  a {\n    border: 1px solid #889bc3;\n    border-radius: 4px;\n    padding: 3px 6px;\n    color: #889bc3;\n\n    &:hover {\n      text-decoration: none;\n      color: #fff;\n      background-color: #889bc3;\n    }\n  }\n`;","import * as React from 'react';\nimport { Toast, ToastBody, ToastHeader, Col, Container, Row } from 'reactstrap';\n\nimport styled from 'styled-components';\nimport contents from './SkillsContents.json';\n\nclass Skills extends React.Component {\n\n  public render() {\n    return (\n      <div>\n        <h1 className=\"pagetitle\">Skills</h1>\n        <SkillsContainer fluid={true}>\n          <ListItems />\n        </SkillsContainer>\n      </div>\n    );\n  }\n}\n\nexport default Skills;\n\nclass ListItems extends React.Component {\n  public render() {\n    return (\n      contents.map((item, row_id) => (\n        <Row key={row_id}>\n          <Col xs={12} lg={12}>\n            <SkillsToast>\n              <ToastHeader icon=\"light\">\n                <h2>{item.category}</h2>\n              </ToastHeader>\n              <ToastBody>\n                <ul>\n                  {item.icon.map((icn, item_id) => (\n                    <li key={item_id}>\n                      <IconImage src={`${process.env.PUBLIC_URL}/img/skills/${icn}`} alt=\"\" />\n                      <span>{item.skill[item_id]}</span>\n                    </li>\n                  ))}\n                </ul>\n              </ToastBody>\n            </SkillsToast>\n          </Col>\n        </Row>\n      ))\n    )\n  }\n}\n\nconst SkillsContainer = styled(Container)`\n  max-width: 1300px;\n  margin: 5vh auto;\n\n  div.row {\n    margin-bottom: 20px;\n\n    @media (min-width: 769px) {\n      &:nth-of-type(odd){\n        float: left;\n      }\n      &:nth-of-type(even){\n        float: right;\n      }\n    }\n\n    div {\n      &.col-lg-12 {\n        flex: none;\n      }\n      &.col-12 {\n        flex: none;\n      }\n    }\n  }\n`;\n\nconst SkillsToast = styled(Toast)`\n  max-width: 100%!important;\n  max-height: 400px;\n  margin-bottom: 30px;\n  border-radius: 5px!important;\n\n  @media (max-width: 768px) {\n    margin-bottom: 10px;\n    max-height: 450px;\n  }\n\n  .toast {\n    &-header {\n      background-color: #889bc3;\n\n      h2 {\n        vertical-align: middle;\n        display: table-cell;\n        line-height: 3rem;\n        padding-left: 2px;\n        color: #fff;\n      }\n    }\n    &-body {\n      background-color: #fff;\n      \n      ul {\n        margin-top: 30px;\n\n        @media (max-width: 768px) {\n          margin-top: 10px;\n          padding-left: 0px;\n        }\n\n        &:after {\n          content: \"\";\n          clear: both;\n          display: block;\n        }\n\n        li {\n          float: left;\n          margin-right: 3.5rem;\n          width: 150px;\n          height: 150px;\n\n          @media (max-width: 768px) {\n            width: 33.333333333%;\n            height: auto;\n            margin-right: 0px;\n            margin-bottom: 15px;\n          }\n\n          span {\n            font-size: 1.8rem;\n            color: #5a657a;\n\n            @media (max-width: 768px) {\n              font-size: 1.4rem;\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst IconImage = styled.img`\n  margin: 6px auto 0;\n  max-width: 100px;\n  max-height: 100px;\n  padding-bottom: 10px;\n  display: table-cell;\n\n  @media (max-width: 768px) {\n    max-width: 55px;\n    max-height: 55px;\n    padding-bottom: 5px;\n  }\n`;","import * as React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport styled, { createGlobalStyle } from 'styled-components';\n\nimport Backdrop from './Components/Backdrop';\nimport Navbar from './Components/Navbar';\nimport SideDrawer from './Components/SideDrawer';\nimport Home from './Pages/Home';\nimport About from './Pages/About';\nimport Works from './Pages/Works';\nimport Skills from './Pages/Skills';\n\ninterface ISideDrawerState {\n  isOpen: boolean;\n}\n\nclass App extends React.Component<{}, ISideDrawerState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      isOpen: false,\n    };\n\n  };\n\n  public render() {\n    let backDrop;\n    const sideDrawerOption = {\n      show: this.state.isOpen,\n      drawToggleClickHandler: this.drawToggleClickHandler\n    }\n\n    if (this.state.isOpen) {\n      backDrop = <Backdrop backdropClickHandler={this.backdropClickHandler} />\n    }\n\n    return (\n      <Router>\n        <div className=\"App\">\n          <GlobalStyle />\n          <Navbar drawToggleClickHandler={this.drawToggleClickHandler} />\n          <SideDrawer {...sideDrawerOption} />\n          {backDrop}\n          <MainWrapper>\n            <Switch>\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/works\" component={Works} />\n              <Route path=\"/skills\" component={Skills} />\n              <Route path=\"/\" component={Home} />\n              <Route component={Home} />\n            </Switch>\n          </MainWrapper>\n        </div>\n      </Router>\n    );\n  };\n\n  private drawToggleClickHandler = () => {\n    // ハンバーガーメニュークリックでサイドバー表示切り替え\n    this.setState((prevState) => {\n      return { isOpen: !prevState.isOpen };\n    });\n  };\n\n  private backdropClickHandler = () => {\n    // オーバーレイエリアタップでサイドバーとオーバーレイを非表示\n    this.setState({ isOpen: false });\n  };\n}\n\nexport default App;\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    height: 100%;\n    font-size: 62.5%;\n  }\n\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: -apple-system,BlinkMacSystemFont,\"Helvetica Neue\",\"游ゴシック Medium\",YuGothic,YuGothicM,\"Hiragino Kaku Gothic ProN\",メイリオ,Meiryo,sans-serif;\n    background: transparent url('/img/bg-01.jpg') left top no-repeat;\n    background-size: cover;\n    background-attachment: fixed;\n\n    @media (max-width: 768px) {\n      background-repeat: repeat-y;\n      background-attachment: scroll;\n    }\n  }\n\n  h1.pagetitle {\n    color: #5a657a;\n    color: #fff;\n\n    @media (max-width: 768px) {\n      font-size: 4rem;\n      margin-top: 12vh;\n    }\n\n    @media (min-width: 769px) {\n      font-size: 4.5rem;\n      margin-top: 12vh;\n    }\n  }\n\n  ul {\n    list-style-type: none;\n  }\n`;\n\nconst MainWrapper = styled.main`\n    height: 100%;\n    text-align: center;\n`;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}